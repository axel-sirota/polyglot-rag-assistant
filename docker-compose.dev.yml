version: '3.8'

services:
  # API Server
  api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    container_name: polyglot-api-dev
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - LIVEKIT_URL=${LIVEKIT_URL}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SERPAPI_API_KEY=${SERPAPI_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - AVIATIONSTACK_API_KEY=${AVIATIONSTACK_API_KEY}
      - AMADEUS_CLIENT_ID=${AMADEUS_CLIENT_ID}
      - AMADEUS_CLIENT_SECRET=${AMADEUS_CLIENT_SECRET}
      - AMADEUS_BASE_URL=${AMADEUS_BASE_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - polyglot-dev

  # LiveKit Agent
  agent:
    build:
      context: ./polyglot-flight-agent
      dockerfile: Dockerfile
    container_name: polyglot-agent-dev
    ports:
      - "8082:8082"
    environment:
      - API_SERVER_URL=http://api:8000
      - LIVEKIT_URL=${LIVEKIT_URL}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - CARTESIA_API_KEY=${CARTESIA_API_KEY}
      - AMADEUS_CLIENT_ID=${AMADEUS_CLIENT_ID}
      - AMADEUS_CLIENT_SECRET=${AMADEUS_CLIENT_SECRET}
    depends_on:
      - api
    networks:
      - polyglot-dev

  # Web UI Server
  web-ui:
    image: node:18-slim
    container_name: polyglot-web-ui-dev
    working_dir: /app
    volumes:
      - ./polyglot-flight-agent:/app/polyglot-flight-agent:ro
      - ./web-app:/app/web-app:ro
    ports:
      - "8080:8080"
    environment:
      - LIVEKIT_URL=${LIVEKIT_URL}
      - ENVIRONMENT=dev
    command: >
      bash -c "
        echo '🌐 Starting Web UI dev server on port 8080...' &&
        echo '📋 Environment: dev' &&
        echo '🔗 API Server: http://localhost:8000' &&
        cd /app/web-app &&
        node dev-server.js
      "
    networks:
      - polyglot-dev

networks:
  polyglot-dev:
    driver: bridge